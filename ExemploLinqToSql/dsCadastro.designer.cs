#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ExemploLinqToSql
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CursoProgramacao")]
	public partial class dsCadastroDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCad_Setores(Cad_Setores instance);
    partial void UpdateCad_Setores(Cad_Setores instance);
    partial void DeleteCad_Setores(Cad_Setores instance);
    partial void InsertCad_Profissoes(Cad_Profissoes instance);
    partial void UpdateCad_Profissoes(Cad_Profissoes instance);
    partial void DeleteCad_Profissoes(Cad_Profissoes instance);
    partial void InsertCad_ProfSetAtuacao(Cad_ProfSetAtuacao instance);
    partial void UpdateCad_ProfSetAtuacao(Cad_ProfSetAtuacao instance);
    partial void DeleteCad_ProfSetAtuacao(Cad_ProfSetAtuacao instance);
    #endregion
		
		public dsCadastroDataContext() : 
				base(global::ExemploLinqToSql.Properties.Settings.Default.CursoProgramacaoConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dsCadastroDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dsCadastroDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dsCadastroDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dsCadastroDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Cad_Setores> Cad_Setores
		{
			get
			{
				return this.GetTable<Cad_Setores>();
			}
		}
		
		public System.Data.Linq.Table<Cad_Profissoes> Cad_Profissoes
		{
			get
			{
				return this.GetTable<Cad_Profissoes>();
			}
		}
		
		public System.Data.Linq.Table<Cad_ProfSetAtuacao> Cad_ProfSetAtuacaos
		{
			get
			{
				return this.GetTable<Cad_ProfSetAtuacao>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cad_Setores")]
	public partial class Cad_Setores : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Set_ID;
		
		private string _Set_Nome;
		
		private string _Set_Descricao;
		
		private System.Nullable<System.DateTime> _Set_DtInc;
		
		private System.Nullable<System.DateTime> _Set_DtAlt;
		
		private System.Nullable<System.DateTime> _Set_DtExc;
		
		private EntitySet<Cad_ProfSetAtuacao> _Cad_ProfSetAtuacaos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSet_IDChanging(int value);
    partial void OnSet_IDChanged();
    partial void OnSet_NomeChanging(string value);
    partial void OnSet_NomeChanged();
    partial void OnSet_DescricaoChanging(string value);
    partial void OnSet_DescricaoChanged();
    partial void OnSet_DtIncChanging(System.Nullable<System.DateTime> value);
    partial void OnSet_DtIncChanged();
    partial void OnSet_DtAltChanging(System.Nullable<System.DateTime> value);
    partial void OnSet_DtAltChanged();
    partial void OnSet_DtExcChanging(System.Nullable<System.DateTime> value);
    partial void OnSet_DtExcChanged();
    #endregion
		
		public Cad_Setores()
		{
			this._Cad_ProfSetAtuacaos = new EntitySet<Cad_ProfSetAtuacao>(new Action<Cad_ProfSetAtuacao>(this.attach_Cad_ProfSetAtuacaos), new Action<Cad_ProfSetAtuacao>(this.detach_Cad_ProfSetAtuacaos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Set_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Set_ID
		{
			get
			{
				return this._Set_ID;
			}
			set
			{
				if ((this._Set_ID != value))
				{
					this.OnSet_IDChanging(value);
					this.SendPropertyChanging();
					this._Set_ID = value;
					this.SendPropertyChanged("Set_ID");
					this.OnSet_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Set_Nome", DbType="VarChar(50)")]
		public string Set_Nome
		{
			get
			{
				return this._Set_Nome;
			}
			set
			{
				if ((this._Set_Nome != value))
				{
					this.OnSet_NomeChanging(value);
					this.SendPropertyChanging();
					this._Set_Nome = value;
					this.SendPropertyChanged("Set_Nome");
					this.OnSet_NomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Set_Descricao", DbType="VarChar(300)")]
		public string Set_Descricao
		{
			get
			{
				return this._Set_Descricao;
			}
			set
			{
				if ((this._Set_Descricao != value))
				{
					this.OnSet_DescricaoChanging(value);
					this.SendPropertyChanging();
					this._Set_Descricao = value;
					this.SendPropertyChanged("Set_Descricao");
					this.OnSet_DescricaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Set_DtInc", DbType="DateTime")]
		public System.Nullable<System.DateTime> Set_DtInc
		{
			get
			{
				return this._Set_DtInc;
			}
			set
			{
				if ((this._Set_DtInc != value))
				{
					this.OnSet_DtIncChanging(value);
					this.SendPropertyChanging();
					this._Set_DtInc = value;
					this.SendPropertyChanged("Set_DtInc");
					this.OnSet_DtIncChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Set_DtAlt", DbType="DateTime")]
		public System.Nullable<System.DateTime> Set_DtAlt
		{
			get
			{
				return this._Set_DtAlt;
			}
			set
			{
				if ((this._Set_DtAlt != value))
				{
					this.OnSet_DtAltChanging(value);
					this.SendPropertyChanging();
					this._Set_DtAlt = value;
					this.SendPropertyChanged("Set_DtAlt");
					this.OnSet_DtAltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Set_DtExc", DbType="DateTime")]
		public System.Nullable<System.DateTime> Set_DtExc
		{
			get
			{
				return this._Set_DtExc;
			}
			set
			{
				if ((this._Set_DtExc != value))
				{
					this.OnSet_DtExcChanging(value);
					this.SendPropertyChanging();
					this._Set_DtExc = value;
					this.SendPropertyChanged("Set_DtExc");
					this.OnSet_DtExcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cad_Setores_Cad_ProfSetAtuacao", Storage="_Cad_ProfSetAtuacaos", ThisKey="Set_ID", OtherKey="SetA_SetID")]
		public EntitySet<Cad_ProfSetAtuacao> Cad_ProfSetAtuacaos
		{
			get
			{
				return this._Cad_ProfSetAtuacaos;
			}
			set
			{
				this._Cad_ProfSetAtuacaos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cad_ProfSetAtuacaos(Cad_ProfSetAtuacao entity)
		{
			this.SendPropertyChanging();
			entity.Cad_Setores = this;
		}
		
		private void detach_Cad_ProfSetAtuacaos(Cad_ProfSetAtuacao entity)
		{
			this.SendPropertyChanging();
			entity.Cad_Setores = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cad_Profissoes")]
	public partial class Cad_Profissoes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Pro_ID;
		
		private string _Pro_Nome;
		
		private string _Pro_Descricao;
		
		private System.Nullable<System.DateTime> _Pro_DtInc;
		
		private System.Nullable<System.DateTime> _Pro_DtAlt;
		
		private System.Nullable<System.DateTime> _Pro_DtExc;
		
		private EntitySet<Cad_ProfSetAtuacao> _Cad_ProfSetAtuacaos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPro_IDChanging(int value);
    partial void OnPro_IDChanged();
    partial void OnPro_NomeChanging(string value);
    partial void OnPro_NomeChanged();
    partial void OnPro_DescricaoChanging(string value);
    partial void OnPro_DescricaoChanged();
    partial void OnPro_DtIncChanging(System.Nullable<System.DateTime> value);
    partial void OnPro_DtIncChanged();
    partial void OnPro_DtAltChanging(System.Nullable<System.DateTime> value);
    partial void OnPro_DtAltChanged();
    partial void OnPro_DtExcChanging(System.Nullable<System.DateTime> value);
    partial void OnPro_DtExcChanged();
    #endregion
		
		public Cad_Profissoes()
		{
			this._Cad_ProfSetAtuacaos = new EntitySet<Cad_ProfSetAtuacao>(new Action<Cad_ProfSetAtuacao>(this.attach_Cad_ProfSetAtuacaos), new Action<Cad_ProfSetAtuacao>(this.detach_Cad_ProfSetAtuacaos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pro_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Pro_ID
		{
			get
			{
				return this._Pro_ID;
			}
			set
			{
				if ((this._Pro_ID != value))
				{
					this.OnPro_IDChanging(value);
					this.SendPropertyChanging();
					this._Pro_ID = value;
					this.SendPropertyChanged("Pro_ID");
					this.OnPro_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pro_Nome", DbType="VarChar(50)")]
		public string Pro_Nome
		{
			get
			{
				return this._Pro_Nome;
			}
			set
			{
				if ((this._Pro_Nome != value))
				{
					this.OnPro_NomeChanging(value);
					this.SendPropertyChanging();
					this._Pro_Nome = value;
					this.SendPropertyChanged("Pro_Nome");
					this.OnPro_NomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pro_Descricao", DbType="VarChar(300)")]
		public string Pro_Descricao
		{
			get
			{
				return this._Pro_Descricao;
			}
			set
			{
				if ((this._Pro_Descricao != value))
				{
					this.OnPro_DescricaoChanging(value);
					this.SendPropertyChanging();
					this._Pro_Descricao = value;
					this.SendPropertyChanged("Pro_Descricao");
					this.OnPro_DescricaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pro_DtInc", DbType="DateTime")]
		public System.Nullable<System.DateTime> Pro_DtInc
		{
			get
			{
				return this._Pro_DtInc;
			}
			set
			{
				if ((this._Pro_DtInc != value))
				{
					this.OnPro_DtIncChanging(value);
					this.SendPropertyChanging();
					this._Pro_DtInc = value;
					this.SendPropertyChanged("Pro_DtInc");
					this.OnPro_DtIncChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pro_DtAlt", DbType="DateTime")]
		public System.Nullable<System.DateTime> Pro_DtAlt
		{
			get
			{
				return this._Pro_DtAlt;
			}
			set
			{
				if ((this._Pro_DtAlt != value))
				{
					this.OnPro_DtAltChanging(value);
					this.SendPropertyChanging();
					this._Pro_DtAlt = value;
					this.SendPropertyChanged("Pro_DtAlt");
					this.OnPro_DtAltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pro_DtExc", DbType="DateTime")]
		public System.Nullable<System.DateTime> Pro_DtExc
		{
			get
			{
				return this._Pro_DtExc;
			}
			set
			{
				if ((this._Pro_DtExc != value))
				{
					this.OnPro_DtExcChanging(value);
					this.SendPropertyChanging();
					this._Pro_DtExc = value;
					this.SendPropertyChanged("Pro_DtExc");
					this.OnPro_DtExcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cad_Profissoes_Cad_ProfSetAtuacao", Storage="_Cad_ProfSetAtuacaos", ThisKey="Pro_ID", OtherKey="SetA_ProID")]
		public EntitySet<Cad_ProfSetAtuacao> Cad_ProfSetAtuacaos
		{
			get
			{
				return this._Cad_ProfSetAtuacaos;
			}
			set
			{
				this._Cad_ProfSetAtuacaos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cad_ProfSetAtuacaos(Cad_ProfSetAtuacao entity)
		{
			this.SendPropertyChanging();
			entity.Cad_Profissoes = this;
		}
		
		private void detach_Cad_ProfSetAtuacaos(Cad_ProfSetAtuacao entity)
		{
			this.SendPropertyChanging();
			entity.Cad_Profissoes = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cad_ProfSetAtuacao")]
	public partial class Cad_ProfSetAtuacao : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SetA_ProID;
		
		private int _SetA_SetID;
		
		private EntityRef<Cad_Profissoes> _Cad_Profissoes;
		
		private EntityRef<Cad_Setores> _Cad_Setores;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSetA_ProIDChanging(int value);
    partial void OnSetA_ProIDChanged();
    partial void OnSetA_SetIDChanging(int value);
    partial void OnSetA_SetIDChanged();
    #endregion
		
		public Cad_ProfSetAtuacao()
		{
			this._Cad_Profissoes = default(EntityRef<Cad_Profissoes>);
			this._Cad_Setores = default(EntityRef<Cad_Setores>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SetA_ProID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SetA_ProID
		{
			get
			{
				return this._SetA_ProID;
			}
			set
			{
				if ((this._SetA_ProID != value))
				{
					if (this._Cad_Profissoes.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSetA_ProIDChanging(value);
					this.SendPropertyChanging();
					this._SetA_ProID = value;
					this.SendPropertyChanged("SetA_ProID");
					this.OnSetA_ProIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SetA_SetID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SetA_SetID
		{
			get
			{
				return this._SetA_SetID;
			}
			set
			{
				if ((this._SetA_SetID != value))
				{
					if (this._Cad_Setores.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSetA_SetIDChanging(value);
					this.SendPropertyChanging();
					this._SetA_SetID = value;
					this.SendPropertyChanged("SetA_SetID");
					this.OnSetA_SetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cad_Profissoes_Cad_ProfSetAtuacao", Storage="_Cad_Profissoes", ThisKey="SetA_ProID", OtherKey="Pro_ID", IsForeignKey=true)]
		public Cad_Profissoes Cad_Profissoes
		{
			get
			{
				return this._Cad_Profissoes.Entity;
			}
			set
			{
				Cad_Profissoes previousValue = this._Cad_Profissoes.Entity;
				if (((previousValue != value) 
							|| (this._Cad_Profissoes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cad_Profissoes.Entity = null;
						previousValue.Cad_ProfSetAtuacaos.Remove(this);
					}
					this._Cad_Profissoes.Entity = value;
					if ((value != null))
					{
						value.Cad_ProfSetAtuacaos.Add(this);
						this._SetA_ProID = value.Pro_ID;
					}
					else
					{
						this._SetA_ProID = default(int);
					}
					this.SendPropertyChanged("Cad_Profissoes");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cad_Setores_Cad_ProfSetAtuacao", Storage="_Cad_Setores", ThisKey="SetA_SetID", OtherKey="Set_ID", IsForeignKey=true)]
		public Cad_Setores Cad_Setores
		{
			get
			{
				return this._Cad_Setores.Entity;
			}
			set
			{
				Cad_Setores previousValue = this._Cad_Setores.Entity;
				if (((previousValue != value) 
							|| (this._Cad_Setores.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cad_Setores.Entity = null;
						previousValue.Cad_ProfSetAtuacaos.Remove(this);
					}
					this._Cad_Setores.Entity = value;
					if ((value != null))
					{
						value.Cad_ProfSetAtuacaos.Add(this);
						this._SetA_SetID = value.Set_ID;
					}
					else
					{
						this._SetA_SetID = default(int);
					}
					this.SendPropertyChanged("Cad_Setores");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
